<p>The basics concepts were explained in the previous part. This part explains further about our project-</p><p><strong>Device Settings-</strong></p><p> Many device options may need to be configured before using it on another node or network. This includes software on server as well as code on the device. </p><p><strong><br></strong></p><p><strong>Ethernet-</strong></p><p> Following configuration options are available in ‘wiznet.h’ and ‘wiznet.cpp’ files </p><ul><li>Setting IP address, MAC address, subnet mask, DNS IP for a device . </li><li>Setting Port of the server (default is set to 8080), but can be any possible port.</li><li>! Arduino supports DHCP but at a cost of increased memory usage but can be implemented.</li><li>Change the ‘startupFile’ and ‘checkFile’ in ‘wiznet.cpp’ as-<ul><li>‘starupFile’ string contains the link to file &lt;startup_file.php&gt;, the file which is stored on server. This file is used for getting startup settings on first booting of device. </li><li>‘checkFile’ string contains the link to file &lt;check_file.php&gt;, the file which is stored on the server. This file is used for checking a specific userid (UID) with all other transmitted data with the server’s database to return a response of ‘id_found’ or ‘id_not _found’. Which states that user is registered or not. </li></ul></li></ul><p><strong>Server-</strong></p><p> Following configurations to be changed (tested in Windows 8.1 with using Wamp server) </p><ul><li>Set port as programmed in device (default is 8080) </li><li>Enable/ Add firewall rules for Inbound &amp; Outbound for that port </li><li>Make sure server is at sufficiently top on the routers network to allow connection from client, like public for direct access.</li></ul><p><strong>Communication Protocol-</strong></p><p><strong><br></strong></p><p> Communication is over the Ethernet, initiated only by device only via GET commands over http. </p><p><strong>User Transaction-</strong></p><p><strong><br></strong></p><p> Various types of data fields (but fixed in number) has to be transmitted through the request in each transaction.</p><p>These fields [key] =&gt; [value] are as follows : ( for the steady state of the system) </p><ul><li>METHOD=CHECK (can be added for ADD/DELETE) </li><li>TYPE=RFID/FINGERPRINT </li><li>UID=&lt;ID CORRESPONDING TO &lt;TYPE&gt;&gt; </li><li>DEVID=&lt;UNIQUE ID OF DEVICE&gt; </li><li>TIME=&lt;TIME IN “HHMMSS” FORMAT”&gt; </li><li>DATE=&lt;DATE IN “DDMMYYYY” FORMAT”&gt; </li><li>LAT=&lt;LATTITUDE IN STRING&gt; </li><li>LON=&lt;LONGITUDE IN STRING&gt; </li></ul><p>*Latency meaning to be taken as ability to work in xx conditions. </p><p><strong>Method-  </strong></p><p>It indicates the type of process to do on sever (currently only CHECK) </p><ul><li>Check - 
<ul>
<li>Check if UID exist in the databases </li><li>Latency : both online and offline</li></ul></li></ul><p><strong>Type-</strong></p><p> This indicates the type of sensor was used to take the UID (userid) </p><ul>
<li>RFID - UID of type RF Identification, 12 byte data. Example - 18008DD45918</li><li>FINGERPRINT - UID of type obtained from fingerprint, String preceeding with “ID”. Example - ‘ID9’ , ’ID45'</li></ul><p><strong>UID-</strong></p><ul>
<li>It indicates the UserID , which a user will have, and will be stored on database of server.</li><li>It can be any string/ specific data and unique to a DEVID. </li></ul><p><strong>DEVID-</strong></p><ul>
<li>It holds the uniquely assigned ID to a device</li><li>This ID needs to be specified on first operation using startupSet.php</li><li>It is stored on EEPROM of the ATmega2560 with at address 0x0000 as ‘IDXXXX’</li><li>But if ID is “IDxxxx” , data transmitted will be DEVID = xxxx</li></ul><p>Time - It holds the time of getting of UID in ‘HHMMSS’ format (string)</p><p>
Date - Date of getting of UID
 In ‘DDMMYYYY’ format (string)</p><p>LAT - Holds the latitude of the device when UID was taken in metric units as ‘ddd.dddddddd’ degrees (string) </p><p>LON - Holds the Longitude of the device when UID was taken in metric units as ‘ddd.dddddddd’ degrees (string)</p><p><strong>Request Template for User Transaction-</strong></p><ul>
<li>Following is the general template for sending GET request with minimum numbers of header options</li></ul><p style="margin-left: 40px;">
GET &lt;url&gt;?key1=value1&amp;key2=value2…keyN=valueN </p><p style="margin-left: 40px;">HTTP/1.1 Host: &lt;server&gt; </p><p style="margin-left: 40px;">Connection: Close</p><p style="margin-left: 40px;"></p><ul>
<li>Example : ( transmitting only UID though)</li></ul><p style="margin-left: 40px;">GET /cas/check.php?METHOD=CHECK&amp;UID=18008DD45918 </p><p style="margin-left: 40px;">HTTP/1.1 Host: 10.3.192.78 </p><p style="margin-left: 40px;">Connection: Close </p><ul>
<li>Result from the server to the device is an http response with string ‘id_found’ or
‘id_not _found’ .</li></ul><p><strong>Startup Transaction-</strong></p><ul><li>Startup transaction occurs after booting of device after initialization of each device. The startup function is in class ‘wiznet’ in ‘wiznet.h’ &amp; is called in a setup with timeout.</li><li>Following is the startup request sent by the device-                                                                                                                                                                                                   GET &lt;startupFile&gt;?DEVID=&lt;device_id&gt;                                                                                                                                                                                                     HTTP/1.1 Host: &lt;server&gt;                                                                                                                                                                                                                         Connection: Close</li></ul><p>where device_id is the allotted device id to the device , although server can override this and assign a different one by following. By default if id has not been assigned device_id will be ‘0000’. </p><p>NOTE: startupFile is the file on the server which sends startup settings stored in another file (startup.txt) </p><ul><li>Response to be expected is http with following data after header :<br><ul><li>DEVID = XXXX</li><li>METHOD = &lt;method&gt;</li><li>TEXTLCD = &lt;text_lcd&gt;</li><li>DATETIME = &lt;dateTime in format YYYYMMDDHHMMSS ie YmdHis format &gt;</li></ul></li></ul><p>There is no restriction on the permutations of the above parameters and even parameters can be absent. (see ‘setStartupSettings’ in ‘wiznet.cpp’) </p><p>NOTE : date time to set using time zone (in PHP).
Currently only CHECK method is supported</p><p>Only the parameters specified are modified/applied </p><ul><li>Example result type to be expected is</li><li>METHOD=CHECK DATETIME=20150531063225</li></ul><p style="margin-left: 20px;">Parameters modified in this are method and dateTime </p><ul><li>DEVID=5454</li><li>DATETIME=20150531063225</li><li>TEXTLCD=HELLO </li><li>METHOD=CHECK</li></ul><p style="margin-left: 20px;">All parameters are modified in this method.</p><p style="margin-left: 20px;"></p><ul><li>In case of communication error default method of ‘CHECK’ is chosen.</li></ul><p><strong>PHP files
Test files used on server (on Win8.1 using Wamp)-</strong></p><ul><li>check.php : checks whether given UID with &lt;TYPE&gt; is on the server or not( for that &lt;DEVID&gt;)</li><li>client.txt : stores the list of registered devices ( only their DEVIDs)</li><li>id.txt : stores the list of registered UID with &lt;TYPE&gt;</li><li>log.txt : any debugging data or transaction is appended here</li><li>startup.txt : stores startup configurations</li><li>startup.php : used when a device boots up and it sets the configuration from 'startup.txt' and execute accordingly)</li><li>startupSet.php : actually html which stores the response from user (server ) to file startup.txt ( interface)</li><li>*delete.php : handles when DELETE method is given</li><li>*delete.txt : stores data to be deleted by delete.php as "&lt;TYPE&gt;,&lt;UID&gt; [CRLF]"</li><li>Note: marked with ‘*’ (asterisk) are not implemented but can be thought of future work.</li></ul><p>Video of Prototype 1 -</p><p><a href="https://www.youtube.com/watch?v=cUeR4WV6N3Y">https://www.youtube.com/watch?v=cUeR4WV6N3Y</a> </p><p>Video of Prototype 2 -</p><p>  <a href="https://www.youtube.com/watch?v=yT9sfJU_AW4">https://www.youtube.com/watch?v=yT9sfJU_AW4</a></p>